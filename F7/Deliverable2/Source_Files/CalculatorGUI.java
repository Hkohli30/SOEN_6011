/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.awt.Dimension;
import java.awt.Toolkit;

import javax.swing.JOptionPane;

/**
 * @author h_kohli
 */
public class CalculatorGUI extends javax.swing.JFrame {

	// Variables declaration - do not modify
	private javax.swing.JLabel aLabel;
	private javax.swing.JTextField aTextField;
	private javax.swing.JLabel bLabel;
	private javax.swing.JTextField bTextField;
	private javax.swing.JButton calculateButton;
	private javax.swing.JButton clearButton;
	private javax.swing.JButton infoButton;
	private javax.swing.JButton previousValueButton;
	private javax.swing.JLabel resultLabel;
	private javax.swing.JLabel resultValueLabel;
	private javax.swing.JLabel welcomeLabel;
	private javax.swing.JLabel xLabel;
	private javax.swing.JTextField xTextField;

	CalculatorInterface calculator;
	CareTaker memento;
	boolean mementoFlag;
	String previousResultHolder;

	// End of variables declaration

	/**
	 * This is the main constructor of the class which initializes the components
	 */
	public CalculatorGUI() {
		Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
		this.setLocation(dim.width / 3 - this.getSize().width / 2, dim.height / 4 - this.getSize().height / 2);
		initComponents();
	}

	/**
	 * This method initializes the Memento
	 */
	public void initalize() {
		calculator = new CalculatorImplementation();
		mementoFlag = false;

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		initalize();
		welcomeLabel = new javax.swing.JLabel();
		aLabel = new javax.swing.JLabel();
		aTextField = new javax.swing.JTextField();
		bLabel = new javax.swing.JLabel();
		bTextField = new javax.swing.JTextField();
		xLabel = new javax.swing.JLabel();
		xTextField = new javax.swing.JTextField();
		calculateButton = new javax.swing.JButton();
		clearButton = new javax.swing.JButton();
		previousValueButton = new javax.swing.JButton();
		resultLabel = new javax.swing.JLabel();
		resultValueLabel = new javax.swing.JLabel();
		infoButton = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		welcomeLabel.setText("Welcome to a^(b^x) function calculator");

		aLabel.setText("a : ");
		bLabel.setText("b : ");
		xLabel.setText("x : ");

		calculateButton.setText("Calculate");
		calculateButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				calculateButtonActionPerformed(evt);
			}
		});

		clearButton.setText("Clear");
		clearButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				clearButtonActionPerformed(evt);
			}
		});

		previousValueButton.setText("Previous Value");
		previousValueButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				previousValueButtonActionPerformed(evt);
			}
		});

		resultLabel.setText("Result : ");

		resultValueLabel.setText("Result Value");

		infoButton.setText("Info");
		infoButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				infoButtonActionPerformed(evt);
			}
		});

		layoutManagement();
		pack();
	}// </editor-fold>

	/**
	 * This method manages the layout of the GUI views
	 */
	public void layoutManagement() {
		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup()
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup().addGap(95, 95, 95).addComponent(welcomeLabel)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(infoButton))
						.addGroup(layout.createSequentialGroup().addContainerGap().addComponent(aLabel)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addGroup(layout.createSequentialGroup().addComponent(resultLabel)
												.addGap(32, 32, 32).addComponent(resultValueLabel,
														javax.swing.GroupLayout.PREFERRED_SIZE, 252,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGroup(layout.createSequentialGroup()
												.addComponent(aTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 95,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(bLabel)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(bTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
												.addComponent(xLabel)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(xTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 101,
														javax.swing.GroupLayout.PREFERRED_SIZE)))
								.addGap(0, 12, Short.MAX_VALUE)))
				.addContainerGap())
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(calculateButton)
								.addGap(14, 14, 14).addComponent(clearButton)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(previousValueButton).addGap(67, 67, 67)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup().addContainerGap()
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(welcomeLabel).addComponent(infoButton))
				.addGap(22, 22, 22)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(aLabel)
						.addComponent(aTextField, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(bLabel)
						.addComponent(bTextField, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(xLabel).addComponent(xTextField, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
				.addGap(18, 18, 18)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(calculateButton).addComponent(clearButton).addComponent(previousValueButton))
				.addGap(39, 39, 39)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(resultLabel).addComponent(resultValueLabel,
								javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
				.addContainerGap(18, Short.MAX_VALUE)));

	}

	/**
	 * This Method handles the actionPerformed by the calculate button and calls
	 * methods which performs calculations
	 * 
	 * @param evt : The trigger of the button
	 */
	private void calculateButtonActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		if (mementoFlag) {
			calculator.restorePreviousCalculation(memento);
			previousResultHolder = String.valueOf(calculator.getResult());
		}
		
		double array[] = validiateInput(aTextField.getText(), bTextField.getText(), xTextField.getText(),true);
		if(array[3] == 1) {
			double firstVal = array[0];
			double secondVal = array[1];
			double variableVal = array[2];
			calculator.setA(firstVal);
			calculator.setB(secondVal);
			calculator.setX(variableVal);
			double result = calculator.getResult();
			if (result == Double.MAX_VALUE || result == (-Double.MAX_VALUE))
				resultValueLabel.setText("" + result + " (Infinity)");
			else
				resultValueLabel.setText(String.valueOf(result));
			memento = calculator.backupLastCalculation();
			mementoFlag = true;

		}
	}
	
	/**
	 * This method validates the input value of the function
	 * @param a : The value of a
	 * @param b : The value of b
	 * @param x : The value of x
	 * @return The array of values
	 */
	public double[] validiateInput(String a, String b, String x,boolean nonTestFlag) {
		double value[] = new double[4];
		value[3] = 0;
		try {
			value[0] = Double.parseDouble(a);
			value[1] = Double.parseDouble(b);
			value[2] = Double.parseDouble(x);
			value[3] = 1;
		}
		catch (NumberFormatException e) {
			if(nonTestFlag) {
				JOptionPane.showMessageDialog(null, "Please Enter Valid Decimal/Integer Values");
				clearButton.doClick();
			}
		}
		
		return value;
	}

	/**
	 * This Method handles the actionPerformed by the clear button This method
	 * clears the values
	 * 
	 * @param evt : The trigger of the button
	 */
	private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		aTextField.setText("");
		bTextField.setText("");
		xTextField.setText("");
		// resultValueLabel.setText("");
	}

	/**
	 * This Method handles the actionPerformed by the previous value button This
	 * method shows the memento value
	 * 
	 * @param evt : The trigger of the button
	 */
	private void previousValueButtonActionPerformed(java.awt.event.ActionEvent evt) {
		if (mementoFlag) {
			if (previousResultHolder != null) {
				if(previousResultHolder.contains(String.valueOf(Double.MAX_VALUE))) 
					JOptionPane.showMessageDialog(null, "Last valid result was " + previousResultHolder +"(Infinity)");
				else
					JOptionPane.showMessageDialog(null, "Last valid result was " + previousResultHolder);
			} else {
				calculator.backupLastCalculation();
				double result = calculator.getResult();
				if(result == Double.MAX_VALUE || result == (- Double.MAX_VALUE))
					JOptionPane.showMessageDialog(null, "Last valid result was : " + result + " (Infinity)");
				else
					JOptionPane.showMessageDialog(null, "Last valid result was " + result);
			}

		} else
			JOptionPane.showMessageDialog(null, "No previous result stored yet");
	}

	/**
	 * This Method handles the actionPerformed by the info button This method shows
	 * the information
	 * 
	 * @param evt : The trigger of the button
	 */
	private void infoButtonActionPerformed(java.awt.event.ActionEvent evt) {
		String message = "The function is a^(b^x) where a and b are constants and x is a variable\n"
				+ "The Domain and codomain are set of real numbers(decimal,integers etc.)\n"
				+ "Use the boxes to enter the value and press calculate \n"
				+ "Use 'clear' to clear values and 'previous value' to show memento stored value \n "
				+ "Any Number above and including "+Double.MAX_VALUE + " is considered as infinity" 
				+ "\nCredits : Himanshu Kohli";
		JOptionPane.showMessageDialog(null, message);
	}


	/*
	 * This method starts the GUI of the application
	 */
	public void execute() {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */

		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(CalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(CalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(CalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(CalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new CalculatorGUI().setVisible(true);
			}
		});
	}

}
